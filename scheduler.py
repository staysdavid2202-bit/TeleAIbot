# scheduler.py
import time
from datetime import datetime
from config import SYMBOLS, MOLDOVA_TZ, SEND_INTERVAL_MINUTES
from analysis import analyze_symbol
from telegram_bot import send_signal
from market_data import fetch_klines
from utils.smart_money import smart_filter

def scheduler_loop():
    print("üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ FinAI –∑–∞–ø—É—â–µ–Ω.")
    last_run = 0

    while True:
        try:
            now = datetime.now(MOLDOVA_TZ)
            elapsed = time.time() - last_run

            if elapsed >= SEND_INTERVAL_MINUTES * 60:
                print(f"\n‚è∞ [{now.strftime('%H:%M:%S')}] –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ ({len(SYMBOLS)} –ø–∞—Ä)...")
                signals_sent = 0

                for sym in SYMBOLS:
                    try:
                        res = analyze_symbol(sym)
                        if not res:
                            print(f"üî∏ {sym}: –Ω–µ—Ç —Å–∏–≥–Ω–∞–ª–∞")
                            continue

                        df = fetch_klines(sym, interval="60", limit=300)
                        if smart_filter(res, df):
                            send_signal(res)
                            signals_sent += 1
                            print(f"‚úÖ {sym}: —Å–∏–≥–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω ({res['direction']})")
                        else:
                            print(f"‚ö™ {sym}: –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω SmartMoney")

                    except Exception as e:
                        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ {sym}: {e}")

                if signals_sent == 0:
                    print("üî∏ –ù–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.")
                else:
                    print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {signals_sent} —Å–∏–≥–Ω–∞–ª–æ–≤.")

                last_run = time.time()

            time.sleep(60)

        except KeyboardInterrupt:
            print("‚õî –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")
            break
        except Exception as e:
            print(f"üö® –û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: {e}")
            time.sleep(30)
